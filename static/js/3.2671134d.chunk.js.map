{"version":3,"sources":["components/chartComponent/chartComponent.jsx","components/mainChartBlock/mainChartBlock.jsx"],"names":["Chart","width","this","props","size","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","PureComponent","Box","styled","div","Title","h4","ErrorTitle","Block","MainChartBlock","state","hasError","getSize","window","innerWidth","fetch","then","json","setState","catch","e","isError","error","Component"],"mappings":"8LAOqBA,E,uKAEnB,OACC,kBAAC,IAAD,CACCC,MAAOC,KAAKC,MAAMC,KAAKH,MACvBI,OAAQH,KAAKC,MAAMC,KAAKC,OACxBC,KAAMJ,KAAKC,MAAMG,KACjBC,OAAQ,CACPC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGtC,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAMC,KAAK,WAAWD,QAAQ,QAAQE,OAAO,OAAOC,UAAW,CAAEC,EAAG,KACpE,kBAAC,IAAD,CAAMH,KAAK,WAAWD,QAAQ,YAAYE,OAAO,c,GAjBlBG,iB,grBCDnC,IAAMC,EAAMC,IAAOC,IAAV,KAQHC,EAAQF,IAAOG,GAAV,KAMLC,EAAaJ,IAAOG,GAAV,KAMVE,EAAQL,IAAOC,IAAV,KAOLK,E,4MACLC,MAAQ,CACPrB,KAAM,GACNsB,UAAU,G,EAgBXC,QAAU,WACT,OAAGC,OAAOC,WAAa,IAAY,CAAC9B,MAAO,GAAM6B,OAAOC,WAAY1B,OAAQ,IAAOyB,OAAOC,YAC9E,CAAC9B,MAAO,IAAO6B,OAAOC,WAAY1B,OAAQ,GAAMyB,OAAOC,a,kEAf/C,IAAD,OACnBC,MAAM,wCAAwCC,MAAK,SAAAhB,GAAC,OAAEA,EAAEiB,UACtDD,MAAK,SAAC3B,GACN,EAAK6B,SAAS,CAAC7B,KAAKA,OAGpB8B,OAAM,SAAAC,GAAI,EAAKF,SAAS,CAACP,UAAS,S,+BAapC,OACC,8BACG1B,KAAKyB,MAAMC,UAAa,kBAAC,IAAD,KACzB,kBAACT,EAAD,KACC,kBAACG,EAAD,mBACA,kBAAC,EAAD,CAAOlB,KAAMF,KAAK2B,UAAWvB,KAAMJ,KAAKyB,MAAMrB,SAG/CJ,KAAKyB,MAAMC,UAAa,kBAAC,IAAD,CAAMU,SAAO,GACrC,kBAACb,EAAD,KACC,kBAACD,EAAD,oB,gDApB2Be,GAC/B,MAAO,CAACX,UAAU,O,GAhBSY,aA2Cdd","file":"static/js/3.2671134d.chunk.js","sourcesContent":["import React,{PureComponent} from \"react\";\r\nimport {\r\n\tLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,\r\n} from 'recharts';\r\n\r\n\r\n\r\nexport default class Chart extends PureComponent {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<LineChart\r\n\t\t\t\twidth={this.props.size.width}//\r\n\t\t\t\theight={this.props.size.height}\r\n\t\t\t\tdata={this.props.data}\r\n\t\t\t\tmargin={{\r\n\t\t\t\t\ttop: 5, right: 30, left: 20, bottom: 5,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<XAxis dataKey=\"date\" />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t<Tooltip />\r\n\t\t\t\t\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"count\" stroke=\"#000\" activeDot={{ r: 4 }} />\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"userCount\" stroke=\"#000\" />\r\n\t\t\t</LineChart>\r\n\t\t);\r\n\t}\r\n}\r\n","import styled from \"styled-components\";\r\nimport Card from \"../cardHOC/card.component\";\r\nimport Chart from \"../chartComponent/chartComponent\";\r\nimport React, {Component} from \"react\";\r\n\r\n\r\nconst Box = styled.div`\r\n\t\tdisplay:flex;\r\n\t\tflex-direction:column;\r\n\t\t&:first-child{\r\n\t\t\tmargin:auto;\r\n\t\t}\r\n\t\tpadding: 1vw 3vw;\r\n\t`;\r\nconst Title = styled.h4`\r\n\t\tfont-size: 2vw;\r\n\t\tfont-weight: 600;\r\n\t\tletter-spacing: .01vw;\r\n\t\tmargin-bottom: 0;\r\n\t`;\r\nconst ErrorTitle = styled.h4`\r\n\t\tfont-size: 2vw;\r\n\t\tfont-weight: 600;\r\n\t\tletter-spacing: .01vw;\r\n\t\tmargin: auto;\r\n\t`;\r\nconst Block = styled.div`\r\n\t\tdisplay:flex;\r\n\t\tflex-direction:column;\r\n\t\tpadding: 8vmax 21vmax;\r\n\t\tmargin:auto;\r\n\t`;\r\n\r\nclass MainChartBlock extends Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\thasError: false,\r\n\t};\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://statbotservis.glitch.me/last\").then(r=>r.json())\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tthis.setState({data:data})\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch(e=>{this.setState({hasError:true})})\r\n\t}\r\n\t\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\treturn {hasError: true};\r\n\t}\r\n\t\r\n\tgetSize = ()=>{\r\n\t\tif(window.innerWidth > 600) return {width: 0.4 * window.innerWidth, height: 0.14 * window.innerWidth};\r\n\t\telse return {width: 0.79 * window.innerWidth, height: 0.4 * window.innerWidth};\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{!this.state.hasError && (<Card>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Title>Main chart</Title>\r\n\t\t\t\t\t\t<Chart size={this.getSize()} data={this.state.data}/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Card>)}\r\n\t\t\t\t{this.state.hasError && (<Card isError>\r\n\t\t\t\t\t<Block>\r\n\t\t\t\t\t\t<ErrorTitle>Error</ErrorTitle>\r\n\t\t\t\t\t</Block>\r\n\t\t\t\t</Card>)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MainChartBlock;"],"sourceRoot":""}